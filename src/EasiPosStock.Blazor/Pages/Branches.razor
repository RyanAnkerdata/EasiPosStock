

@page "/branches"

@attribute [Authorize(EasiPosStockPermissions.Branches.Default)]
@using EasiPosStock.Branches
@using EasiPosStock.Localization
@using EasiPosStock.Shared
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Components.Web
@using Blazorise
@using Blazorise.Components
@using Blazorise.DataGrid
@using Volo.Abp.BlazoriseUI
@using Volo.Abp.BlazoriseUI.Components
@using Volo.Abp.ObjectMapping
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout
@using EasiPosStock.CostCentres 

@using EasiPosStock.Permissions
@using Microsoft.AspNetCore.Components
@using Volo.Abp.AspNetCore.Components.Web
@using Volo.Abp.Http.Client
@inherits EasiPosStockComponentBase
@inject IBranchesAppService BranchesAppService
@inject ICostCentresAppService CostCentresAppService

@inject IUiMessageService UiMessageService
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["Branches"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>

@* ************************* SEARCH ************************* *@
<Card>
    <CardBody>
@*//<suite-custom-code-block-1>*@
@*//</suite-custom-code-block-1>*@
        <Form id="BranchSearchForm" class="mb-3">
            <Addons>
                <Addon AddonType="AddonType.Body">
                    <TextEdit @bind-Text="@Filter.FilterText"
                              Autofocus="true"
                              Placeholder="@L["Search"]">
                    </TextEdit>
                </Addon>
                <Addon AddonType="AddonType.End">
                    <SubmitButton Form="BranchSearchForm" Clicked="GetBranchesAsync">
                        <Icon Name="IconName.Search" Class="me-1"></Icon>@L["Search"]
                    </SubmitButton>
                </Addon>
            </Addons>
        </Form>
        
        <Row Class="mt-3 mb-3"> 
            <div class="col-md-12">
                <a href="javascript:;" class="text-decoration-none" @onclick="() => ShowAdvancedFilters = !ShowAdvancedFilters">@L["SeeAdvancedFilters"]</a>
            </div>
        </Row>
        
        <div style="display: @(!ShowAdvancedFilters ? "none" : "block")">
            <Row>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["BranchName"]</FieldLabel>
                        <TextEdit Text="@Filter.BranchName" TextChanged="@OnBranchNameChangedAsync" />                       
                    </Field>
                </Column>
            </Row>
@*//<suite-custom-code-block-2>*@
@*//</suite-custom-code-block-2>*@
        </div>
@*//<suite-custom-code-block-3>*@
@*//</suite-custom-code-block-3>*@
    </CardBody>
</Card>

@* ************************* DATA GRID ************************* *@
<Card>
    <CardBody>
        <DataGrid TItem="BranchDto"
                  Data="BranchList"
                  DetailRowTrigger="@((x) => { x.Single = true; return ShouldShowDetailRow(); })"
                  DetailRowStartsVisible="false"
                  RowClicked="@((e) => { if (e.Item.Id == SelectedBranch?.Id) { SelectedBranch = null; } else { SelectedBranch = e.Item; } })"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  Responsive="true"
                  PageSize="PageSize"
                  Class="datagrid-detail">
            <DataGridColumns>
                @if (ShouldShowDetailRow())
                {
                    <DataGridColumn TItem="BranchDto"
                                    Field="Id"
                                    Width="0.5rem">
                        <DisplayTemplate>
                            @if (context.Id == SelectedBranch?.Id)
                            {
                                <i class="fas fa-chevron-up"/>
                            }
                            else
                            {
                                <i class="fas fa-chevron-down"/>
                            }
                        </DisplayTemplate>
                    </DataGridColumn>
                }
                <DataGridEntityActionsColumn TItem="BranchDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="BranchDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="BranchDto"
                                          Visible="@CanEditBranch"
                                          Clicked="async () => await OpenEditBranchModalAsync(context)"
                                          Text="@L["Edit"]"></EntityAction>
                            <EntityAction TItem="BranchDto"
                                          Visible="@CanDeleteBranch"
                                          Clicked="() => DeleteBranchAsync(context)"
                                          ConfirmationMessage="@(()=> L["DeleteConfirmationMessage"])"
                                          Text="@L["Delete"]"></EntityAction>
@*//<suite-custom-code-block-4>*@
@*//</suite-custom-code-block-4>*@
                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>
               
              <DataGridColumn TItem="BranchDto"
                      Field="BranchName"
                      Caption="@L["BranchName"]">
              </DataGridColumn>

            </DataGridColumns>
            
            <DetailRowTemplate>
    <div class="bg-light rounded p-3 pb-0 pt-1">
        <Tabs SelectedTab="@SelectedChildTab" SelectedTabChanged="@OnSelectedChildTabChanged">
            <Items>
                <Tab Name="costcentre-tab">@L["CostCentres"]</Tab>
            </Items>
            
            <Content>
                                        <TabPanel Name="costcentre-tab" Class="mt-0">
                            @if (CanCreateCostCentre)
                            {
                                <Row Class="mb-2">
                                    <Column Class="d-flex justify-content-end">
                                        <Button Color="Color.Primary" Clicked="async () => await OpenCreateCostCentreModalAsync(context.Id)">
                                            <i class="fas fa-plus me-1"></i>@L["NewCostCentre"]
                                        </Button>
                                    </Column>
                                </Row>
                            }

                            @{
                                var costCentres = (context as BranchDto).CostCentres;

                                <DataGrid @ref="@CostCentreDataGrids[context.Id]"
                                          TItem="CostCentreDto"
                                          Data="costCentres"
                                          ReadData="@((args) => OnCostCentreDataGridReadAsync(args, context.Id))"
                                          Sortable="true"
                                          ShowCaptions="true"
                                          ShowPager="true"
                                          Responsive="true"
                                          PageSize="CostCentrePageSize">

                                    <DataGridColumns>

                                        <DataGridEntityActionsColumn TItem="CostCentreDto" @ref="@CostCentreEntityActionsColumns">
                                            <DisplayTemplate Context="cost_centre_context">
                                                <EntityActions TItem="CostCentreDto" EntityActionsColumn="@CostCentreEntityActionsColumns">
                                                    <EntityAction TItem="CostCentreDto"
                                                                  Visible="@CanEditCostCentre"
                                                                  Clicked="async () => await OpenEditCostCentreModalAsync(cost_centre_context)"
                                                                  Text="@L["Edit"]">
                                                    </EntityAction>
                                                    <EntityAction TItem="CostCentreDto"
                                                                  Visible="@CanDeleteCostCentre"
                                                                  Clicked="async () => await DeleteCostCentreAsync(cost_centre_context)"
                                                                  ConfirmationMessage="@(() => L["DeleteConfirmationMessage"])"
                                                                  Text="@L["Delete"]">
                                                    </EntityAction>
                                                </EntityActions>
                                            </DisplayTemplate>
                                        </DataGridEntityActionsColumn>

                                        <DataGridCommandColumn/>

                                        
              <DataGridColumn TItem="CostCentreDto"
                      Field="CostCentreReference"
                      Caption="@L["CostCentreReference"]">
              </DataGridColumn>

              <DataGridColumn TItem="CostCentreDto"
                      Field="CostCentreName"
                      Caption="@L["CostCentreName"]">
              </DataGridColumn>

              <DataGridColumn Context="productcontext" TItem="CostCentreDto"
                      Field="IsDisabled"
                      Caption="@L["IsDisabled"]">
                    <DisplayTemplate>
                                                    @if (productcontext.IsDisabled)
                        {
                            <Icon TextColor="TextColor.Success" Name="@IconName.Check" />
                        }
                        else
                        {
                            <Icon TextColor="TextColor.Danger" Name="@IconName.Times" />
                        }
                    </DisplayTemplate>
              </DataGridColumn>


                                    </DataGridColumns>
                                </DataGrid>
                            }
                        </TabPanel>
            </Content>
        </Tabs>
    </div>
</DetailRowTemplate>
        </DataGrid>
    </CardBody>
</Card>

@* ************************* CREATE MODAL ************************* *@
<Modal @ref="CreateBranchModal" Closing="@CreateBranchModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
@*//<suite-custom-code-block-5>*@
@*//</suite-custom-code-block-5>*@
        <Form id="CreateBranchForm">
            <ModalHeader>
                <ModalTitle>@L["NewBranch"]</ModalTitle>
                <CloseButton Clicked="CloseCreateBranchModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@NewBranchValidations"
                            Mode="ValidationMode.Auto"
                            Model="@NewBranch"
                            ValidateOnLoad="false">
                     
                    
                    <Validation>
                        <Field>
                            <FieldLabel>@L["BranchName"] *</FieldLabel>
                            <TextEdit @bind-Text="@NewBranch.BranchName"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    
                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateBranchModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="CreateBranchForm" Clicked="CreateBranchAsync" />
@*//<suite-custom-code-block-6>*@
@*//</suite-custom-code-block-6>*@
            </ModalFooter>
        </Form>
@*//<suite-custom-code-block-7>*@
@*//</suite-custom-code-block-7>*@
    </ModalContent>
</Modal>

@* ************************* EDIT MODAL ************************* *@
<Modal @ref="EditBranchModal" Closing="@EditBranchModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
@*//<suite-custom-code-block-8>*@
@*//</suite-custom-code-block-8>*@
        <Form id="EditBranchForm">
            <ModalHeader>
                <ModalTitle>@L["Update"]</ModalTitle>
                <CloseButton Clicked="CloseEditBranchModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditingBranchValidations"
                            Mode="ValidationMode.Auto"
                            Model="@EditingBranch"
                            ValidateOnLoad="false">
                     
                    
                    <Validation>
                        <Field>
                            <FieldLabel>@L["BranchName"] *</FieldLabel>
                            <TextEdit @bind-Text="@EditingBranch.BranchName"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    
                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditBranchModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="EditBranchForm" Clicked="UpdateBranchAsync" />
@*//<suite-custom-code-block-9>*@
@*//</suite-custom-code-block-9>*@
            </ModalFooter>
        </Form>
@*//<suite-custom-code-block-10>*@
@*//</suite-custom-code-block-10>*@
    </ModalContent>
</Modal>

@* ************************* CostCentre: CREATE MODAL ************************* *@
<Modal @ref="CreateCostCentreModal" Closing="@CreateCostCentreModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
        <Form id="CreateCostCentreForm">
            <ModalHeader>
                <ModalTitle>@L["NewCostCentre"]</ModalTitle>
                <CloseButton Clicked="CloseCreateCostCentreModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@NewCostCentreValidations"
                             Mode="ValidationMode.Auto"
                             Model="@NewCostCentre"
                             ValidateOnLoad="false">
                     
                    
                    <Validation>
                        <Field>
                            <FieldLabel>@L["CostCentreReference"]</FieldLabel>
                            <TextEdit @bind-Text="@NewCostCentre.CostCentreReference"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation>
                        <Field>
                            <FieldLabel>@L["CostCentreName"]</FieldLabel>
                            <TextEdit @bind-Text="@NewCostCentre.CostCentreName"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Field>
                        <Check TValue="bool" @bind-Checked="@NewCostCentre.IsDisabled" >@L["IsDisabled"]</Check>
                    </Field>

                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateCostCentreModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="CreateCostCentreForm" Clicked="CreateCostCentreAsync" />
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

@* ************************* CostCentre: EDIT MODAL ************************* *@
<Modal @ref="EditCostCentreModal" Closing="@EditCostCentreModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
        <Form id="EditCostCentreForm">
            <ModalHeader>
                <ModalTitle>@L["Update"]</ModalTitle>
                <CloseButton Clicked="CloseEditCostCentreModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditingCostCentreValidations"
                             Mode="ValidationMode.Auto"
                             Model="@EditingCostCentre"
                             ValidateOnLoad="false">
                     
                    
                    <Validation>
                        <Field>
                            <FieldLabel>@L["CostCentreReference"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingCostCentre.CostCentreReference"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation>
                        <Field>
                            <FieldLabel>@L["CostCentreName"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingCostCentre.CostCentreName"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Field>
                        <Check TValue="bool" @bind-Checked="@EditingCostCentre.IsDisabled" >@L["IsDisabled"]</Check>
                    </Field>

                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditCostCentreModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="EditCostCentreForm" Clicked="UpdateCostCentreAsync" />
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>